#!/bin/bash

SCRIPT=$(basename ${0})

help() {
  echo ""
  echo "Script to build Sonatype Nexus OSS RPMs"
  echo ""
  echo "Syntax: "
  echo ""
  echo "${SCRIPT} [-v <MAJOR_VERSION>]"
  echo ""
  echo "Where: "
  echo "  -v  Sonatype Nexus OSS major version (currently 2 or 3 supported)."
  echo "      2 is default if parameter is not present"
  echo ""
}

function check_create_dir() {
  if [ ! -d "./${1}" ]; then
    mkdir "./${1}"
  fi
}

function create_build_env() {
  check_create_dir BUILD
  check_create_dir BUILDROOT
  check_create_dir RPMS
  check_create_dir SOURCES
  check_create_dir SPECS
  check_create_dir SRPMS
}

function get_sources() {
  if [ ! -f "./SOURCES/${2}" ]; then
    echo "Downloading ${1} to "./SOURCES/${2}"..."
    curl -L "${1}" -o "./SOURCES/${2}"
  fi
}

function build_rpm() {
  rpmbuild --quiet --define "_topdir `pwd`" -ba "${1}"
  return ${?}
}

get_url_source_from_spec() {
  local NAME=$(sed -rn 's/Name:\s*(.*)/\1/p' ${1})
  echo $(sed -rn 's/Source0:\s*(.*)/\1/p' ${1}|sed -e "s/%{name}/${NAME}/g")
}

while getopts ":v:h" opts; do
  case "${opts}" in
    v) VERSION=${OPTARG};;
    h) help
       exit 0;;
    *) echo "Invalid syntax. Use ${SCRIPT} -h"
       exit 1;;
  esac
done
shift $((OPTIND-1))

case ${VERSION} in
  3) SPEC='SPECS/nexus3-oss.spec'
     URL="$(get_url_source_from_spec ${SPEC})"
     TGZ="$(basename ${URL})";;
  2|'') SPEC='SPECS/nexus-oss.spec'
        URL="$(get_url_source_from_spec ${SPEC})"
	TGZ="$(basename ${URL})";;
  *) echo "Invalid version. Use ${SCRIPT} -h"
     exit 1;;
esac

echo "### Creating build environment..."
create_build_env
echo "### Downloading sources..."
get_sources ${URL} ${TGZ}
echo "### Building RPMs..."
build_rpm ${SPEC}
if [ $? -eq 0 ]; then
  echo "### Binary RPMs available at ${PWD}/RPMS"
  echo "### Source RPMs available at ${PWD}/SRPMS"
  exit 0
else
  echo There are errors. Check your log.
  exit 1
fi
